---
description: "Test get_latest_job_log_files tool in full mode"
tests:
  # Basic functionality tests
  - it: "should retrieve latest job log files with default parameters"
    request:
      jsonrpc: "2.0"
      id: "job-files-default"
      method: "tools/call"
      params:
        name: "get_latest_job_log_files"
        arguments: {}
    expect:
      response:
        jsonrpc: "2.0"
        id: "job-files-default"
        result:
          content:
            match:arrayElements:
              type: "text"
              text: "match:type:string"
          isError: false
      stderr: "toBeEmpty"
    performance:
      maxResponseTime: "2000ms"

  - it: "should limit job log files when limit parameter is provided"
    request:
      jsonrpc: "2.0"
      id: "job-files-limit"
      method: "tools/call"
      params:
        name: "get_latest_job_log_files"
        arguments:
          limit: 1
    expect:
      response:
        jsonrpc: "2.0"
        id: "job-files-limit"
        result:
          content:
            match:arrayElements:
              type: "text"
              text: "match:contains:Found 1 job logs:"
          isError: false
      stderr: "toBeEmpty"
    performance:
      maxResponseTime: "2000ms"

  - it: "should retrieve last 5 job log files"
    request:
      jsonrpc: "2.0"
      id: "job-files-five"
      method: "tools/call"
      params:
        name: "get_latest_job_log_files"
        arguments:
          limit: 5
    expect:
      response:
        jsonrpc: "2.0"
        id: "job-files-five"
        result:
          content:
            match:arrayElements:
              type: "text"
              text: "match:regex:Found [0-5] job logs:"
          isError: false
      stderr: "toBeEmpty"
    performance:
      maxResponseTime: "2000ms"

  # Content validation tests
  - it: "should include job name in response"
    request:
      jsonrpc: "2.0"
      id: "job-files-jobname"
      method: "tools/call"
      params:
        name: "get_latest_job_log_files"
        arguments:
          limit: 1
    expect:
      response:
        jsonrpc: "2.0"
        id: "job-files-jobname"
        result:
          content:
            match:arrayElements:
              match:partial:
                text: "match:regex:ðŸ”§ Job: [A-Za-z]+"
          isError: false
      stderr: "toBeEmpty"

  - it: "should include job ID in response"
    request:
      jsonrpc: "2.0"
      id: "job-files-jobid"
      method: "tools/call"
      params:
        name: "get_latest_job_log_files"
        arguments:
          limit: 1
    expect:
      response:
        jsonrpc: "2.0"
        id: "job-files-jobid"
        result:
          content:
            match:arrayElements:
              match:partial:
                text: "match:regex:ID: [0-9]+"
          isError: false
      stderr: "toBeEmpty"

  - it: "should include log file name in response"
    request:
      jsonrpc: "2.0"
      id: "job-files-filename"
      method: "tools/call"
      params:
        name: "get_latest_job_log_files"
        arguments:
          limit: 1
    expect:
      response:
        jsonrpc: "2.0"
        id: "job-files-filename"
        result:
          content:
            match:arrayElements:
              match:partial:
                text: "match:regex:File: Job-[A-Za-z]+-[0-9]+\\.log"
          isError: false
      stderr: "toBeEmpty"

  - it: "should include modification timestamp in GMT format"
    request:
      jsonrpc: "2.0"
      id: "job-files-timestamp"
      method: "tools/call"
      params:
        name: "get_latest_job_log_files"
        arguments:
          limit: 1
    expect:
      response:
        jsonrpc: "2.0"
        id: "job-files-timestamp"
        result:
          content:
            match:arrayElements:
              match:partial:
                text: "match:regex:Modified: [A-Za-z]{3}, [0-9]{2} [A-Za-z]{3} [0-9]{4} [0-9]{2}:[0-9]{2}:[0-9]{2} GMT"
          isError: false
      stderr: "toBeEmpty"

  - it: "should include file size information"
    request:
      jsonrpc: "2.0"
      id: "job-files-size"
      method: "tools/call"
      params:
        name: "get_latest_job_log_files"
        arguments:
          limit: 1
    expect:
      response:
        jsonrpc: "2.0"
        id: "job-files-size"
        result:
          content:
            match:arrayElements:
              match:partial:
                text: "match:regex:Size: [0-9]+\\.[0-9]+ [A-Z]B"
          isError: false
      stderr: "toBeEmpty"

  # Edge case tests
  - it: "should handle zero limit parameter"
    request:
      jsonrpc: "2.0"
      id: "job-files-zero-limit"
      method: "tools/call"
      params:
        name: "get_latest_job_log_files"
        arguments:
          limit: 0
    expect:
      response:
        jsonrpc: "2.0"
        id: "job-files-zero-limit"
        result:
          content:
            match:arrayElements:
              type: "text"
              text: "match:contains:Invalid limit '0' for tool"
          isError: true
      stderr: "toBeEmpty"
    performance:
      maxResponseTime: "2000ms"

  - it: "should handle large limit parameter"
    request:
      jsonrpc: "2.0"
      id: "job-files-large-limit"
      method: "tools/call"
      params:
        name: "get_latest_job_log_files"
        arguments:
          limit: 100
    expect:
      response:
        jsonrpc: "2.0"
        id: "job-files-large-limit"
        result:
          content:
            match:arrayElements:
              type: "text"
              text: "match:type:string"
          isError: false
      stderr: "toBeEmpty"
    performance:
      maxResponseTime: "2000ms"

  # Error handling tests
  - it: "should handle negative limit parameter"
    request:
      jsonrpc: "2.0"
      id: "job-files-negative-limit"
      method: "tools/call"
      params:
        name: "get_latest_job_log_files"
        arguments:
          limit: -1
    expect:
      response:
        jsonrpc: "2.0"
        id: "job-files-negative-limit"
        result:
          content:
            match:arrayElements:
              type: "text"
              text: "match:contains:Invalid limit '-1' for tool"
          isError: true
      stderr: "toBeEmpty"
    performance:
      maxResponseTime: "2000ms"

  - it: "should handle invalid limit parameter type"
    request:
      jsonrpc: "2.0"
      id: "job-files-invalid-limit"
      method: "tools/call"
      params:
        name: "get_latest_job_log_files"
        arguments:
          limit: "invalid"
    expect:
      response:
        jsonrpc: "2.0"
        id: "job-files-invalid-limit"
        result:
          content:
            match:arrayElements:
              type: "text"
              text: "match:contains:No job logs found"
          isError: false
      stderr: "toBeEmpty"
    performance:
      maxResponseTime: "2000ms"

  # Performance validation tests
  - it: "should respond within reasonable time for default request"
    request:
      jsonrpc: "2.0"
      id: "job-files-performance"
      method: "tools/call"
      params:
        name: "get_latest_job_log_files"
        arguments: {}
    expect:
      response:
        jsonrpc: "2.0"
        id: "job-files-performance"
        result:
          content:
            match:arrayElements:
              type: "text"
              text: "match:type:string"
          isError: false
      stderr: "toBeEmpty"
    performance:
      maxResponseTime: "1500ms"

  - it: "should respond consistently for multiple calls"
    request:
      jsonrpc: "2.0"
      id: "job-files-consistency"
      method: "tools/call"
      params:
        name: "get_latest_job_log_files"
        arguments:
          limit: 2
    expect:
      response:
        jsonrpc: "2.0"
        id: "job-files-consistency"
        result:
          content:
            match:arrayElements:
              type: "text"
              text: "match:regex:Found [0-2] job logs:"
          isError: false
      stderr: "toBeEmpty"
    performance:
      maxResponseTime: "2000ms"

  # Response structure validation
  - it: "should return proper JSON response structure"
    request:
      jsonrpc: "2.0"
      id: "job-files-structure"
      method: "tools/call"
      params:
        name: "get_latest_job_log_files"
        arguments:
          limit: 1
    expect:
      response:
        jsonrpc: "2.0"
        id: "job-files-structure"
        result:
          content: "match:type:array"
          isError: "match:type:boolean"
      stderr: "toBeEmpty"

  - it: "should have consistent response format across different limits"
    request:
      jsonrpc: "2.0"
      id: "job-files-format-consistency"
      method: "tools/call"
      params:
        name: "get_latest_job_log_files"
        arguments:
          limit: 3
    expect:
      response:
        jsonrpc: "2.0"
        id: "job-files-format-consistency"
        result:
          content:
            match:arrayElements:
              type: "text"
              text: "match:type:string"
          isError: false
      stderr: "toBeEmpty"
    performance:
      maxResponseTime: "2000ms"
