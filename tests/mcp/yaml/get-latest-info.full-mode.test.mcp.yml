description: "get_latest_info tool tests - Access recent info-level log entries"
tests:
  # ========================================
  # SUCCESS SCENARIOS
  # ========================================

  - it: "should get latest info entries with default parameters"
    request:
      jsonrpc: "2.0"
      id: "get-latest-info-default"
      method: "tools/call"
      params:
        name: "get_latest_info"
        arguments: {}
    expect:
      response:
        jsonrpc: "2.0"
        id: "get-latest-info-default"
        result:
          content:
            match:arrayElements:
              match:partial:
                type: "text"
                text: "match:type:string"
          isError: false
      stderr: "toBeEmpty"

  - it: "should validate response structure and content"
    request:
      jsonrpc: "2.0"
      id: "get-latest-info-structure"
      method: "tools/call"
      params:
        name: "get_latest_info"
        arguments: {}
    expect:
      response:
        jsonrpc: "2.0"
        id: "get-latest-info-structure"
        result:
          content:
            match:arrayElements:
              match:partial:
                type: "text"
                text: "match:type:string"
          isError: "match:type:boolean"

  - it: "should contain info log entries in response text"
    request:
      jsonrpc: "2.0"
      id: "get-latest-info-content"
      method: "tools/call"
      params:
        name: "get_latest_info"
        arguments: {}
    expect:
      response:
        jsonrpc: "2.0"
        id: "get-latest-info-content"
        result:
          content:
            match:arrayElements:
              match:partial:
                text: "match:contains:Latest"
          isError: false

  - it: "should contain LOG level INFO in response"
    request:
      jsonrpc: "2.0"
      id: "get-latest-info-log-level"
      method: "tools/call"
      params:
        name: "get_latest_info"
        arguments: {}
    expect:
      response:
        jsonrpc: "2.0"
        id: "get-latest-info-log-level"
        result:
          content:
            match:arrayElements:
              match:partial:
                text: "match:contains:INFO"
          isError: false

  - it: "should contain log file names in response"
    request:
      jsonrpc: "2.0"
      id: "get-latest-info-filenames"
      method: "tools/call"
      params:
        name: "get_latest_info"
        arguments: {}
    expect:
      response:
        jsonrpc: "2.0"
        id: "get-latest-info-filenames"
        result:
          content:
            match:arrayElements:
              match:partial:
                text: "match:regex:info-blade-[\\d-]+\\.log"
          isError: false

  - it: "should respect custom limit parameter"
    request:
      jsonrpc: "2.0"
      id: "get-latest-info-limit"
      method: "tools/call"
      params:
        name: "get_latest_info"
        arguments:
          limit: 3
    expect:
      response:
        jsonrpc: "2.0"
        id: "get-latest-info-limit"
        result:
          content:
            match:arrayElements:
              match:partial:
                text: "match:contains:Latest 3 info messages"
          isError: false

  - it: "should accept date parameter in YYYYMMDD format"
    request:
      jsonrpc: "2.0"
      id: "get-latest-info-date"
      method: "tools/call"
      params:
        name: "get_latest_info"
        arguments:
          date: "20250914"
          limit: 2
    expect:
      response:
        jsonrpc: "2.0"
        id: "get-latest-info-date"
        result:
          content:
            match:arrayElements:
              match:partial:
                text: "match:contains:Latest 2 info messages"
          isError: false

  - it: "should handle both date and limit parameters together"
    request:
      jsonrpc: "2.0"
      id: "get-latest-info-both-params"
      method: "tools/call"
      params:
        name: "get_latest_info"
        arguments:
          date: "20250914"
          limit: 5
    expect:
      response:
        jsonrpc: "2.0"
        id: "get-latest-info-both-params"
        result:
          content:
            match:arrayElements:
              match:partial:
                type: "text"
                text: "match:type:string"
          isError: false

  # ========================================
  # EDGE CASE SCENARIOS
  # ========================================

  - it: "should handle limit of 1"
    request:
      jsonrpc: "2.0"
      id: "get-latest-info-limit-one"
      method: "tools/call"
      params:
        name: "get_latest_info"
        arguments:
          limit: 1
    expect:
      response:
        jsonrpc: "2.0"
        id: "get-latest-info-limit-one"
        result:
          content:
            match:arrayElements:
              match:partial:
                text: "match:contains:Latest 1 info messages"
          isError: false

  - it: "should handle large limit values"
    request:
      jsonrpc: "2.0"
      id: "get-latest-info-large-limit"
      method: "tools/call"
      params:
        name: "get_latest_info"
        arguments:
          limit: 100
    expect:
      response:
        jsonrpc: "2.0"
        id: "get-latest-info-large-limit"
        result:
          content:
            match:arrayElements:
              match:partial:
                type: "text"
                text: "match:type:string"
          isError: false

  - it: "should return error for zero limit"
    request:
      jsonrpc: "2.0"
      id: "get-latest-info-zero-limit"
      method: "tools/call"
      params:
        name: "get_latest_info"
        arguments:
          limit: 0
    expect:
      response:
        jsonrpc: "2.0"
        id: "get-latest-info-zero-limit"
        result:
          content:
            match:arrayElements:
              match:partial:
                text: "match:contains:Invalid limit '0'"
          isError: true

  # ========================================
  # PARAMETER VALIDATION SCENARIOS
  # ========================================

  - it: "should handle invalid limit type gracefully"
    request:
      jsonrpc: "2.0"
      id: "get-latest-info-invalid-limit"
      method: "tools/call"
      params:
        name: "get_latest_info"
        arguments:
          limit: "invalid"
    expect:
      response:
        jsonrpc: "2.0"
        id: "get-latest-info-invalid-limit"
        result:
          content:
            match:arrayElements:
              match:partial:
                text: "match:contains:Latest invalid info messages"
          isError: false

  - it: "should return appropriate message for invalid date format"
    request:
      jsonrpc: "2.0"
      id: "get-latest-info-invalid-date"
      method: "tools/call"
      params:
        name: "get_latest_info"
        arguments:
          date: "invalid-date"
          limit: 3
    expect:
      response:
        jsonrpc: "2.0"
        id: "get-latest-info-invalid-date"
        result:
          content:
            match:arrayElements:
              match:partial:
                text: "match:contains:No info log files found for date invalid-date"
          isError: false

  - it: "should return error for negative limit values"
    request:
      jsonrpc: "2.0"
      id: "get-latest-info-negative-limit"
      method: "tools/call"
      params:
        name: "get_latest_info"
        arguments:
          limit: -5
    expect:
      response:
        jsonrpc: "2.0"
        id: "get-latest-info-negative-limit"
        result:
          content:
            match:arrayElements:
              match:partial:
                text: "match:contains:Invalid limit '-5'"
          isError: true

  - it: "should handle extra unknown parameters"
    request:
      jsonrpc: "2.0"
      id: "get-latest-info-extra-params"
      method: "tools/call"
      params:
        name: "get_latest_info"
        arguments:
          limit: 5
          unknownParam: "should-be-ignored"
    expect:
      response:
        jsonrpc: "2.0"
        id: "get-latest-info-extra-params"
        result:
          content:
            match:arrayElements:
              match:partial:
                text: "match:contains:Latest 5 info messages"
          isError: false

  # ========================================
  # CONTENT VALIDATION SCENARIOS
  # ========================================

  - it: "should contain timestamp patterns in log entries"
    request:
      jsonrpc: "2.0"
      id: "get-latest-info-timestamps"
      method: "tools/call"
      params:
        name: "get_latest_info"
        arguments:
          limit: 2
    expect:
      response:
        jsonrpc: "2.0"
        id: "get-latest-info-timestamps"
        result:
          content:
            match:arrayElements:
              match:partial:
                text: "match:regex:\\[\\d{4}-\\d{2}-\\d{2} \\d{2}:\\d{2}:\\d{2}\\.\\d{3} GMT\\]"
          isError: false

  - it: "should contain SFCC-specific log components"
    request:
      jsonrpc: "2.0"
      id: "get-latest-info-sfcc-components"
      method: "tools/call"
      params:
        name: "get_latest_info"
        arguments:
          limit: 3
    expect:
      response:
        jsonrpc: "2.0"
        id: "get-latest-info-sfcc-components"
        result:
          content:
            match:arrayElements:
              match:partial:
                text: "match:regex:(SystemJobThread|PipelineCallServlet|Sites-)"
          isError: false

  - it: "should contain job or pipeline identifiers"
    request:
      jsonrpc: "2.0"
      id: "get-latest-info-identifiers"
      method: "tools/call"
      params:
        name: "get_latest_info"
        arguments:
          limit: 2
    expect:
      response:
        jsonrpc: "2.0"
        id: "get-latest-info-identifiers"
        result:
          content:
            match:arrayElements:
              match:partial:
                text: "match:regex:(JOB |PipelineCall|custom \\[\\])"
          isError: false

  - it: "should format multiple log entries with separators"
    request:
      jsonrpc: "2.0"
      id: "get-latest-info-separators"
      method: "tools/call"
      params:
        name: "get_latest_info"
        arguments:
          limit: 3
    expect:
      response:
        jsonrpc: "2.0"
        id: "get-latest-info-separators"
        result:
          content:
            match:arrayElements:
              match:partial:
                text: "match:contains:---"
          isError: false

  # ========================================
  # PERFORMANCE VALIDATION
  # ========================================

  - it: "should respond within reasonable time for default request"
    request:
      jsonrpc: "2.0"
      id: "get-latest-info-perf-default"
      method: "tools/call"
      params:
        name: "get_latest_info"
        arguments: {}
    expect:
      response:
        jsonrpc: "2.0"
        id: "get-latest-info-perf-default"
        result:
          content:
            match:arrayElements:
              match:partial:
                type: "text"
                text: "match:type:string"
          isError: false
      performance:
        maxResponseTime: "800ms"

  - it: "should respond quickly with small limit"
    request:
      jsonrpc: "2.0"
      id: "get-latest-info-perf-small"
      method: "tools/call"
      params:
        name: "get_latest_info"
        arguments:
          limit: 2
    expect:
      response:
        jsonrpc: "2.0"
        id: "get-latest-info-perf-small"
        result:
          content:
            match:arrayElements:
              match:partial:
                type: "text"
                text: "match:type:string"
          isError: false
      performance:
        maxResponseTime: "600ms"

  - it: "should handle larger limits efficiently"
    request:
      jsonrpc: "2.0"
      id: "get-latest-info-perf-large"
      method: "tools/call"
      params:
        name: "get_latest_info"
        arguments:
          limit: 50
    expect:
      response:
        jsonrpc: "2.0"
        id: "get-latest-info-perf-large"
        result:
          content:
            match:arrayElements:
              match:partial:
                type: "text"
                text: "match:type:string"
          isError: false
      performance:
        maxResponseTime: "1500ms"
