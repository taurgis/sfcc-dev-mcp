---
description: "Test summarize_logs tool in full mode"
tests:
  # Core functionality - comprehensive structure validation
  - it: "should retrieve comprehensive log summary with complete structure"
    request:
      jsonrpc: "2.0"
      id: "summarize-comprehensive"
      method: "tools/call"
      params:
        name: "summarize_logs"
        arguments: {}
    expect:
      response:
        jsonrpc: "2.0"
        id: "summarize-comprehensive"
        result:
          content:
            match:arrayElements:
              type: "text"
              text: "match:regex:Log Summary for \\d{8}:[\\s\\S]*üìä Counts:[\\s\\S]*- Errors: \\d+[\\s\\S]*- Warnings: \\d+[\\s\\S]*- Info: \\d+[\\s\\S]*- Debug: \\d+[\\s\\S]*üìÅ Log Files \\(\\d+\\):[\\s\\S]*üî• Key Issues:"
          isError: false
      stderr: "toBeEmpty"
    performance:
      maxResponseTime: "3000ms"

  # Basic successful response validation
  - it: "should return standard MCP response format"
    request:
      jsonrpc: "2.0"
      id: "summarize-format"
      method: "tools/call"
      params:
        name: "summarize_logs"
        arguments: {}
    expect:
      response:
        jsonrpc: "2.0"
        id: "summarize-format"
        result:
          content: "match:arrayLength:1"
          isError: false
      stderr: "toBeEmpty"

  # Date parameter tests - focused on key scenarios
  - it: "should handle specific valid date parameter"
    request:
      jsonrpc: "2.0"
      id: "summarize-specific-date"
      method: "tools/call"
      params:
        name: "summarize_logs"
        arguments:
          date: "20250921"
    expect:
      response:
        jsonrpc: "2.0"
        id: "summarize-specific-date"
        result:
          content:
            match:arrayElements:
              type: "text"
              text: "match:regex:Log Summary for 20250921:|No log files found for date 20250921"
          isError: false
      stderr: "toBeEmpty"

  - it: "should handle no available logs gracefully"
    request:
      jsonrpc: "2.0"
      id: "summarize-no-logs"
      method: "tools/call"
      params:
        name: "summarize_logs"
        arguments:
          date: "20220101"
    expect:
      response:
        jsonrpc: "2.0"
        id: "summarize-no-logs"
        result:
          content:
            match:arrayElements:
              type: "text"
              text: "match:contains:No log files found for date 20220101"
          isError: false
      stderr: "toBeEmpty"

  # Edge cases - simplified and consolidated
  - it: "should handle invalid date formats gracefully"
    request:
      jsonrpc: "2.0"
      id: "summarize-invalid-date"
      method: "tools/call"
      params:
        name: "summarize_logs"
        arguments:
          date: "invalid-date"
    expect:
      response:
        jsonrpc: "2.0"
        id: "summarize-invalid-date"
        result:
          content:
            match:arrayElements:
              type: "text"
              text: "match:contains:No log files found for date invalid-date"
          isError: false
      stderr: "toBeEmpty"

  # YAML-specific pattern tests - what YAML does better than Node.js
  - it: "should validate emoji patterns and structure markers"
    request:
      jsonrpc: "2.0"
      id: "summarize-patterns"
      method: "tools/call"
      params:
        name: "summarize_logs"
        arguments: {}
    expect:
      response:
        jsonrpc: "2.0"
        id: "summarize-patterns"
        result:
          content:
            match:arrayElements:
              type: "text"
              text: "match:regex:üìä.*üìÅ.*üî•"
          isError: false
      stderr: "toBeEmpty"

  # Performance test - single focused scenario
  - it: "should complete log summary analysis within reasonable time for health monitoring"
    request:
      jsonrpc: "2.0"
      id: "summarize-performance"
      method: "tools/call"
      params:
        name: "summarize_logs"
        arguments: {}
    expect:
      response:
        jsonrpc: "2.0"
        id: "summarize-performance"
        result:
          content:
            match:arrayElements:
              type: "text"
              text: "match:type:string"
          isError: false
      stderr: "toBeEmpty"
    performance:
      maxResponseTime: "2500ms"  # Stricter for critical health monitoring

  # Date format validation - specific YAML strength
  - it: "should use consistent YYYYMMDD date format in responses"
    request:
      jsonrpc: "2.0"
      id: "summarize-date-format"
      method: "tools/call"
      params:
        name: "summarize_logs"
        arguments: {}
    expect:
      response:
        jsonrpc: "2.0"
        id: "summarize-date-format"
        result:
          content:
            match:arrayElements:
              type: "text"
              text: "match:regex:Log Summary for \\d{8}:|No log files found for date \\d{8}"
          isError: false
      stderr: "toBeEmpty"
