---
description: "Test list_log_files tool in full mode - Optimized for aegis framework testing"
tests:
  # Core MCP protocol validation
  - it: "should return valid MCP response with log file metadata"
    request:
      jsonrpc: "2.0"
      id: "list-files-basic"
      method: "tools/call"
      params:
        name: "list_log_files"
        arguments: {}
    expect:
      response:
        jsonrpc: "2.0"
        id: "list-files-basic"
        result:
          content:
            match:arrayElements:
              match:partial:
                type: "text"
                text: "match:contains:Available log files"
          isError: false
      stderr: "toBeEmpty"
    performance:
      maxResponseTime: "2000ms"

  # SFCC log pattern validation (combined test for all log levels)
  - it: "should include all SFCC log levels with correct naming patterns"
    request:
      jsonrpc: "2.0"
      id: "list-files-patterns"
      method: "tools/call"
      params:
        name: "list_log_files"
        arguments: {}
    expect:
      response:
        jsonrpc: "2.0"
        id: "list-files-patterns"
        result:
          content:
            match:arrayElements:
              match:partial:
                text: "match:regex:(debug|error|info|warn)-blade-[\\d]{8}-[\\d]{6}\\.log"
          isError: false
      stderr: "toBeEmpty"

  # Comprehensive metadata validation (combined size and timestamp test)
  - it: "should include complete file metadata with proper formatting"
    request:
      jsonrpc: "2.0"
      id: "list-files-metadata"
      method: "tools/call"
      params:
        name: "list_log_files"
        arguments: {}
    expect:
      response:
        jsonrpc: "2.0"
        id: "list-files-metadata"
        result:
          content:
            match:arrayElements:
              match:partial:
                text: "match:regex:ðŸ“„ \\/[\\w-]+\\.log[\\s\\S]*Size: [\\d.,]+ (Bytes|KB|MB)[\\s\\S]*Modified: [A-Za-z]{3}, [\\d]{1,2} [A-Za-z]{3} [\\d]{4} [\\d]{2}:[\\d]{2}:[\\d]{2} GMT"
          isError: false
      stderr: "toBeEmpty"

  # Parameter handling (simple edge case for aegis testing)
  - it: "should handle empty arguments gracefully"
    request:
      jsonrpc: "2.0"
      id: "list-files-empty-args"
      method: "tools/call"
      params:
        name: "list_log_files"
        arguments: {}
    expect:
      response:
        jsonrpc: "2.0"
        id: "list-files-empty-args"
        result:
          content:
            match:arrayElements:
              type: "text"
              text: "match:type:string"
          isError: false
      stderr: "toBeEmpty"
