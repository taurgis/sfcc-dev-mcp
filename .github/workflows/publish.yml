name: Publish to NPM

on:
  release:
    types: [published]

jobs:
  publish:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'
          cache: 'npm'

      - name: Configure Git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build

      - name: Setup SFCC mock server
        run: |
          cd tests/servers/sfcc-mock-server
          npm install
          npm run setup:logs
          node server.js --port 3000 &
          sleep 5

      - name: Run tests
        run: npm test

      - name: Run linting
        run: npm run lint:check

      - name: Final build for publishing
        run: npm run build

      - name: Extract version and create release branch
        run: |
          # Extract version from the release tag (remove 'v' prefix if present)
          VERSION=${GITHUB_REF#refs/tags/}
          VERSION=${VERSION#v}
          echo "Setting package version to: $VERSION"
          
          # Create and switch to release branch
          BRANCH_NAME="release/v$VERSION"
          echo "Creating release branch: $BRANCH_NAME"
          git checkout -b $BRANCH_NAME

          # Update package version
          npm version $VERSION --no-git-tag-version

          # Commit the version update
          git add package.json package-lock.json
          git commit -m "chore: bump version to $VERSION for release"

          # Push the release branch
          git push origin $BRANCH_NAME

      - name: Stop SFCC mock server
        if: always()
        run: |
          # Kill SFCC mock server process
          pkill -f "node.*server.js" || true
          # Fallback: kill any remaining server processes on port 3000
          lsof -ti :3000 | xargs kill -9 2>/dev/null || true

      - name: Publish to NPM
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Install MCP Publisher
        run: |
          curl -L "https://github.com/modelcontextprotocol/registry/releases/download/latest/mcp-publisher_$(uname -s | tr '[:upper:]' '[:lower:]')_$(uname -m | sed 's/x86_64/amd64/;s/aarch64/arm64/').tar.gz" | tar xz mcp-publisher

      - name: Update server.json version
        run: |
          # Extract version from the release tag (remove 'v' prefix if present)
          VERSION=${GITHUB_REF#refs/tags/}
          VERSION=${VERSION#v}
          echo "Updating server.json version to: $VERSION"
          
          # Update server.json version to match the release
          jq --arg v "$VERSION" '.version = $v | .packages[0].version = $v' server.json > tmp && mv tmp server.json

      - name: Validate server.json
        run: npm run validate:server-json

      - name: Login to MCP Registry
        run: ./mcp-publisher login github-oidc

      - name: Publish to MCP Registry
        run: ./mcp-publisher publish
